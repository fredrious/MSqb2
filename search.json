[{"path":"https://fredrious.github.io/MSqb2/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Farhad Shakeri. Author, maintainer.","code":""},{"path":"https://fredrious.github.io/MSqb2/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Shakeri F (2024). MSqb2: Differential expression analysis MS-based Proteomics data. R package version 0.2.1, https://fredrious.github.io/MSqb2/.","code":"@Manual{,   title = {MSqb2: Differential expression analysis of MS-based Proteomics data},   author = {Farhad Shakeri},   year = {2024},   note = {R package version 0.2.1},   url = {https://fredrious.github.io/MSqb2/}, }"},{"path":[]},{"path":"https://fredrious.github.io/MSqb2/reference/DE_stat_func.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform Differential Expression Analysis Using LIMMA — DE_stat_func","title":"Perform Differential Expression Analysis Using LIMMA — DE_stat_func","text":"function performs differential expression analysis MS data using limma (Linear Models Microarray Data) package. supports wide range experimental designs, including handling technical replicates, blocking factors, application contrasts identify differentially expressed proteins peptides.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/DE_stat_func.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform Differential Expression Analysis Using LIMMA — DE_stat_func","text":"","code":"DE_stat_func(   dat,   sample = \"SampleID\",   variable = \"Protein\",   value = \"Abundance\",   model.formula = \"~ 0 + Condition\",   sva.obj = NULL,   techrep = NULL,   limma.trend = TRUE,   limma.robust = TRUE,   limma.winsor.tail.p = FALSE,   time.course = FALSE,   spline.df = 4,   removeTotalMissing = TRUE,   pairwise.contrasts = TRUE,   pairwise.denominator = c(\"wt\", \"wildtype\", \"wild-type\", \"cntrl\", \"control\", \"ctl\",     \"untreated\"),   manual.contrasts = NULL,   choose.contrasts = FALSE,   make.complex.contrasts = FALSE,   blocking.parameter = NULL,   reverse.contrasts = FALSE,   showWarnings = FALSE,   prefix = NULL,   suffix = NULL,   rmSingleShotProteins = TRUE,   add.vs.inContrast = TRUE,   path = getwd(),   ... )"},{"path":"https://fredrious.github.io/MSqb2/reference/DE_stat_func.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform Differential Expression Analysis Using LIMMA — DE_stat_func","text":"dat data.table containing MS data. table include columns samples, variables (e.g., proteins), values (e.g., abundances). sample character string specifying column name contains sample identifiers. Default \"SampleID\". variable character string specifying column name contains variables interest (e.g., \"Protein\"). Default \"Protein\". value character string specifying column name contains values analyzed (e.g., \"Abundance\"). Default \"Abundance\". model.formula character string specifying model formula used analysis. Default \"~ 0 + Condition\". sva.obj optional sva object batch correction. Default NULL. techrep character string specifying column name contains technical replicates. provided, used blocking factors. Default NULL. limma.trend Logical character. TRUE, trend fitting applied; character, specifies column name used trend fitting. Default TRUE. limma.robust Logical. TRUE, robust fitting applied eBayes step. Default TRUE. limma.winsor.tail.p Logical numeric. FALSE, winsorization applied; numeric, specifies tail probability winsorization. Default FALSE. time.course Logical. TRUE, time course analysis performed using spline regression. Default FALSE. spline.df Integer. Degrees freedom spline regression time course analysis. Default 4. removeTotalMissing Logical. TRUE, rows missing values removed analysis. Default TRUE. pairwise.contrasts Logical. TRUE, pairwise contrasts conditions computed. Default TRUE. pairwise.denominator Character vector. Specifies condition levels used denominators pairwise contrasts. Default includes \"wt\", \"wildtype\", \"control\", etc. manual.contrasts list manual contrasts applied. Default NULL. choose.contrasts Logical. TRUE, allows manual selection contrasts list. Default FALSE. make.complex.contrasts Logical. TRUE, prompts user create complex contrasts. Default FALSE. blocking.parameter character string specifying column name blocking factors, typically technical replicates. Default NULL. reverse.contrasts Logical. TRUE, reverses direction contrasts. Default FALSE. showWarnings Logical. TRUE, warnings shown execution. Default FALSE. prefix character string prefix output filenames. Default NULL. suffix character string suffix output filenames. Default NULL. rmSingleShotProteins Logical. TRUE, proteins one peptide removed analysis. Default TRUE. add.vs.inContrast Logical. TRUE, contrasts labeled \"vs.\" conditions. Default TRUE. path character string specifying output directory saving results. Default current working directory. ... Additional arguments passed underlying LIMMA functions.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/DE_stat_func.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform Differential Expression Analysis Using LIMMA — DE_stat_func","text":"list containing: \"fit_eb\": fitted model applying eBayes. \"fit_residuals\": residuals fit. \"fit0\": initial fitted model applying contrasts.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/DE_stat_func.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Perform Differential Expression Analysis Using LIMMA — DE_stat_func","text":"DE_stat_func function designed handle complex experimental designs typical mass spectrometry-based proteomics studies. supports: Technical Replicates: techrep provided, function accounts repeated measures using duplicateCorrelation method LIMMA. Time Course Analysis: time.course TRUE, function performs spline regression model effect time. Contrast Definitions: Users can define contrasts manually choose pairwise contrasts. Complex contrasts, average delta-delta contrasts, can also generated. function suitable differential expression analysis standard proteomics experiments complex designs involving time courses technical replicates. working experiments potential batch effects, users can incorporate surrogate variable analysis (sva.obj) correct .","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/DE_stat_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate result table of the Differential Expression Analysis — DE_stat_table","title":"Generate result table of the Differential Expression Analysis — DE_stat_table","text":"function generates differential expression statistics table fitted empirical Bayes model, merges additional data provided, optionally saves results file.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/DE_stat_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate result table of the Differential Expression Analysis — DE_stat_table","text":"","code":"DE_stat_table(   fit_eb,   dat,   featureData = NULL,   variable = \"Protein\",   Gene.name = \"Genes\",   adjust = \"BH\",   save = TRUE,   path = Tables.path,   file.name = \"StatTest_output\",   ... )"},{"path":"https://fredrious.github.io/MSqb2/reference/DE_stat_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate result table of the Differential Expression Analysis — DE_stat_table","text":"fit_eb fitted empirical Bayes model object (limma). dat data.table containing additional data merge statistics table. featureData Optional data.table feature data (gene names, ...) merged statistics table. variable character string specifying variable name proteins features data. Default \"Protein\". Gene.name character string specifying column name gene names. Default \"Genes\". adjust character string specifying method p-value adjustment. Default \"BH\". save Logical, TRUE, saves result file. Default TRUE. path character string specifying path save file. Default Tables.path. file.name character string specifying file name saving output. Default \"StatTest_output\". ... Additional arguments passed export_DE_result function.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/DE_stat_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate result table of the Differential Expression Analysis — DE_stat_table","text":"data.table containing differential expression statistics.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/add_psm_count.html","id":null,"dir":"Reference","previous_headings":"","what":"Add PSM Count and Related Information to msDT — add_psm_count","title":"Add PSM Count and Related Information to msDT — add_psm_count","text":"function calculates adds PSM (Peptide-Spectrum Match) counts provided mass spectrometry data table (msDT).","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/add_psm_count.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add PSM Count and Related Information to msDT — add_psm_count","text":"","code":"add_psm_count(dat, param)"},{"path":"https://fredrious.github.io/MSqb2/reference/add_psm_count.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add PSM Count and Related Information to msDT — add_psm_count","text":"dat data.table containing original MS data, typically columns like Feature, Protein, Abundance, etc. param character string specifying column name used grouping calculating PSM counts (e.g., \"Protein\").","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/add_psm_count.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add PSM Count and Related Information to msDT — add_psm_count","text":"modified data.table additional columns representing PSM count-related information, including mean PSM counts abundance statistics.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/add_psm_count.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add PSM Count and Related Information to msDT — add_psm_count","text":"function performs following steps: Groups data specified param calculates PSM count. Computes mean abundance group. Adds column representing mean PSM count adjusted abundance rank. Merges information back original data table (msDT).","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/annotation_query.html","id":null,"dir":"Reference","previous_headings":"","what":"Annotate Protein Data with Gene Information — annotation_query","title":"Annotate Protein Data with Gene Information — annotation_query","text":"function annotates protein data fetching gene information either local file querying UniProt API. function designed handle protein accessions, split multi-accession inputs, resolve gene names, optionally shortening long gene names easier visualization.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/annotation_query.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Annotate Protein Data with Gene Information — annotation_query","text":"","code":"annotation_query(   dat,   feature.annotation.source,   uniprot.input = \"Protein\",   uniprot.output = \"Genes\",   uniprot.extra = NULL,   uniprot.KEY = \"UNIPROTKB\",   uniprot.species.name = NULL,   uniprot.taxId = NULL,   n.call = 99,   uniprot.file = \"AnnotationsTable.xlsx\",   shorten.gene.names = TRUE,   split.char = \";\",   save.annotation = TRUE,   save.annotation.path = Tables.path,   Data.path = Data.path )"},{"path":"https://fredrious.github.io/MSqb2/reference/annotation_query.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Annotate Protein Data with Gene Information — annotation_query","text":"dat data table containing protein data columns specified uniprot.input. feature.annotation.source Character string specifying source annotation. Options \"uniprot.file\", already generated \"annotation.file\" previous run, \"uniprot\". uniprot.input Character string specifying column dat containing protein accessions (default \"Protein\"). uniprot.output Character string specifying type output desired UniProt, \"Genes\" (default) valid UniProt field. uniprot.extra Optional additional UniProt fields retrieve (default NULL). uniprot.KEY key type used UniProt queries (default \"UNIPROTKB\"). uniprot.species.name Optional full species name used UniProt queries (e.g., \"Homo sapiens\"). provided, uniprot.taxId must given. uniprot.taxId Optional UniProt taxonomy ID species interest. n.call Number UniProt queries make per batch (default 99). uniprot.file Path saved local annotation file (default \"AnnotationsTable.xlsx\"). shorten.gene.names Logical indicating whether long gene names shortened (default TRUE). split.char Character used split multiple accessions (default \";\"). save.annotation Logical indicating whether save retrieved annotations file (default TRUE). save.annotation.path Path directory annotation file saved. Data.path Path directory data files stored.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/annotation_query.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Annotate Protein Data with Gene Information — annotation_query","text":"data table containing original data additional Genes column annotated gene names.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/annotation_query.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Annotate Protein Data with Gene Information — annotation_query","text":"function handles different annotation sources: \"uniprot.file\": Loads annotations previously saved Excel file. \"annotation.file\": Reads annotations user-provided local file. \"uniprot\": Queries UniProt directly fetch annotations. annotation source \"uniprot\", either uniprot.taxId uniprot.species.name must provided ensure accurate species-specific annotation. function can handle inputs multiple accessions present single cell (proteins groups), typically separated \";\", can split precise annotations. Gene names can optionally shortened better readability, especially visualizations.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/capitalize_first_char.html","id":null,"dir":"Reference","previous_headings":"","what":"Capitalize the First Letter of Each String — capitalize_first_char","title":"Capitalize the First Letter of Each String — capitalize_first_char","text":"function takes character vector returns vector first letter string capitalized remaining letters lowercase.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/capitalize_first_char.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Capitalize the First Letter of Each String — capitalize_first_char","text":"","code":"capitalize_first_char(x)"},{"path":"https://fredrious.github.io/MSqb2/reference/capitalize_first_char.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Capitalize the First Letter of Each String — capitalize_first_char","text":"x character vector first letter element capitalized.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/capitalize_first_char.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Capitalize the First Letter of Each String — capitalize_first_char","text":"character vector first letter string capitalized.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/capitalize_first_char.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Capitalize the First Letter of Each String — capitalize_first_char","text":"","code":"capitalize_first_char(c(\"apple\", \"banana\", \"cherry\")) #> [1] \"Apple\"  \"Banana\" \"Cherry\" # Returns: \"Apple\" \"Banana\" \"Cherry\""},{"path":"https://fredrious.github.io/MSqb2/reference/char2fact.html","id":null,"dir":"Reference","previous_headings":"","what":"character to factor converter — char2fact","title":"character to factor converter — char2fact","text":"Converts data.frame data.table columns class character factor.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/char2fact.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"character to factor converter — char2fact","text":"","code":"char2fact(dat)"},{"path":"https://fredrious.github.io/MSqb2/reference/char2fact.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"character to factor converter — char2fact","text":"dat Input data class data.table data.frame.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/char2fact.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"character to factor converter — char2fact","text":"input data dat columns class character converted factor.","code":""},{"path":[]},{"path":"https://fredrious.github.io/MSqb2/reference/char2fact.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"character to factor converter — char2fact","text":"","code":"DT <- data.table(x = c(1., 2., 3.), y = c(4L, 5L, 6L), z = c(\"a\", \"b\", \"NA\")) sapply(DT, class) #>           x           y           z  #>   \"numeric\"   \"integer\" \"character\"  char2fact(DT) #>        x     y      z #>    <num> <int> <fctr> #> 1:     1     4      a #> 2:     2     5      b #> 3:     3     6   <NA> sapply(DT, class) #>         x         y         z  #> \"numeric\" \"integer\"  \"factor\""},{"path":"https://fredrious.github.io/MSqb2/reference/check_design.html","id":null,"dir":"Reference","previous_headings":"","what":"Check Design of Experimental Data — check_design","title":"Check Design of Experimental Data — check_design","text":"function verifies design experimental data provided data table. checks issues duplicate column names, multiple condition levels assigned sample, consistency block technical replicate assignments. Based checks, determines type experimental design (e.g., fixed block, random block, group comparison).","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/check_design.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check Design of Experimental Data — check_design","text":"","code":"check_design(dat)"},{"path":"https://fredrious.github.io/MSqb2/reference/check_design.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check Design of Experimental Data — check_design","text":"dat data.table containing experimental design metadata. include columns SampleID, Condition, optionally Block TechRep.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/check_design.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check Design of Experimental Data — check_design","text":"character string describing type experimental design detected relevant factors going handeled statistical model. Possible values include: \"fixBlock.fixTechRep\" - block: fixed-effect, TechRep: fixed-effect \"fixBlock.randomTechRep\" - block: fixed-effect, TechRep: random-effect \"randomBlock.avgTechRep\" - block: random-effect, average TechRep. \"fixBlock\" - block: fixed-effect. \"randomBlock\" - block: random-effect. \"fixTech\" - TechRep: fixed-effect, blocking. \"randomTech\" - TechRep: random-effect, blocking. \"group.comparison\" - Simple group comparison design.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/check_design.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check Design of Experimental Data — check_design","text":"","code":"# Example data.table dat <- data.table(SampleID = c(\"S1\", \"S2\", \"S3\", \"S4\"),                   Condition = c(\"C1\", \"C1\", \"C2\", \"C2\"),                   Block = c(\"B1\", \"B1\", \"B2\", \"B2\"),                   TechRep = c(\"T1\", \"T2\", \"T1\", \"T2\")) check_design(dat) #> [1] \"fixBlock.fixTechRep\""},{"path":"https://fredrious.github.io/MSqb2/reference/check_input_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Check and Process Input File for MS Analysis — check_input_file","title":"Check and Process Input File for MS Analysis — check_input_file","text":"function checks input file data table MS analysis, determines data level (PSM, peptide, protein), identifies relevant columns, processes data extract useful metadata.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/check_input_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check and Process Input File for MS Analysis — check_input_file","text":"","code":"check_input_file(x, sheet = 1)"},{"path":"https://fredrious.github.io/MSqb2/reference/check_input_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check and Process Input File for MS Analysis — check_input_file","text":"x data.table character string representing path input file containing MS data. file path provided, file read data.table. sheet integer specifying sheet number read input file Excel file. Default 1.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/check_input_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check and Process Input File for MS Analysis — check_input_file","text":"list following elements: \"MSmethod\": identified mass spectrometry method (\"TMT\" \"LFQ\"). \"data.level\": data level input data (\"PSM-level\", \"Peptide-level\", \"Protein-level\"). \"Intensity.col\": identified columns corresponding intensity values. \"Sample.dt\": data.table containing metadata extracted input data, file IDs, channels, conditions. \"parList\": list identified relevant column names processing.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/check_input_file.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check and Process Input File for MS Analysis — check_input_file","text":"check_input_file function performs several key tasks: Determines whether data PSM, peptide, protein level based presence specific columns. Identifies mass spectrometry method (TMT LFQ) examining intensity columns. Extracts relevant metadata, including sample IDs, conditions, channels, organizes structured data.table. Prepares list relevant column names use downstream analyses. function supports direct data input data.table reading data input file. designed handle data common MS analysis software (PD MQ) outputs.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/check_input_file.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check and Process Input File for MS Analysis — check_input_file","text":"","code":"if (FALSE) { # \\dontrun{   # Check an input file for MS analysis   input_file <- \"path/to/ms_data.xlsx\"   result <- check_input_file(input_file, sheet = 1)   print(result) } # }"},{"path":"https://fredrious.github.io/MSqb2/reference/clean_column_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean and Standardize Data Column Names and Values — clean_column_names","title":"Clean and Standardize Data Column Names and Values — clean_column_names","text":"function cleans standardizes column names optionally data within data.table vector replacing removing symbols may interfere design formulas. particularly useful preprocessing data statistical analysis certain characters column names data values can cause issues.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/clean_column_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean and Standardize Data Column Names and Values — clean_column_names","text":"","code":"clean_column_names(   dat,   complete.check = FALSE,   subsymDT = data.table(symout = c(\"\\\\~\", \"\\\\+\", \"\\\\:\", \"\\\\|\", \"\\\\-\", \"\\\\(\",     \"\\\\)\", \"\\\\/\", \" \"), symin = c(\"\", \".\", \"\", \"\", \"_\", \"\", \"\", \".\", \"\")) )"},{"path":"https://fredrious.github.io/MSqb2/reference/clean_column_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean and Standardize Data Column Names and Values — clean_column_names","text":"dat data.table vector containing data cleaned. complete.check Logical; TRUE, function also clean content within columns data.table. Defaults FALSE. subsymDT data.table specifying symbols replaced removed. contain two columns: \"symout\" (symbol replaced) \"symin\" (replacement). Defaults table common problematic symbols.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/clean_column_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean and Standardize Data Column Names and Values — clean_column_names","text":"list two elements: \"cln.nm.dat\": cleaned data.table vector. \"ref.name.tbl\": reference table showing original cleaned column names (dat data.table).","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/clean_column_names.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Clean and Standardize Data Column Names and Values — clean_column_names","text":"function ensures certain symbols commonly used design formulas (e.g., ~, +, :, |, -, (, ), /, spaces) either removed replaced column names , complete.check = TRUE, within data . avoids potential conflicts working formulas statistical models. default subsymDT table maps symbols replacements: \"~\" -> \"\" \"+\" -> \".\" \":\" -> \"\" \"|\" -> \"\" \"-\" -> \"_\" \"(\" -> \"._\" \")\" -> \"_.\" \"/\" -> \".\" \" \" -> \"\"","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/clean_column_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clean and Standardize Data Column Names and Values — clean_column_names","text":"","code":"library(data.table) dat <- data.table(`Column (1)` = c(1, 2), `Another+Column` = c(3, 4)) result <- clean_column_names(dat) cleaned_data <- result$cln.nm.dat reference_table <- result$ref.name.tbl"},{"path":"https://fredrious.github.io/MSqb2/reference/clean_feature_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean Feature-level Data — clean_feature_data","title":"Clean Feature-level Data — clean_feature_data","text":"function cleans filters feature-level (psm-level) data based various criteria contaminant removal, isolation interference, intensity thresholds. also handles multiple PSM measurements per feature, removes single-shot proteins, calculates basic statistics filtering.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/clean_feature_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean Feature-level Data — clean_feature_data","text":"","code":"clean_feature_data(   dat,   metadata,   filter.by.quaninfo = \"auto\",   isolation.interference.cutoff = 75,   collapse_psm_method = \"TagPSM\",   filter.singleshot.proteins = \"BYPEPTIDE\",   min.intensity = 0.01 )"},{"path":"https://fredrious.github.io/MSqb2/reference/clean_feature_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean Feature-level Data — clean_feature_data","text":"dat data.table containing feature-level data. metadata data.table containing metadata associated MS data. filter..quaninfo Character. Specifies method filtering MS data generated PD based quantitative information. Options \"auto\", \"none\", specific label. Default \"auto\". isolation.interference.cutoff Numeric NULL. threshold filtering based isolation interference. Features interference value removed. Default 75. collapse_psm_method Character. Method handling multiple PSM measurements per feature. Default \"TagPSM\". filter.singleshot.proteins Character. Method filtering single-shot proteins. Options \"BYPEPTIDE\" \"BYFEATURE\". Default \"BYPEPTIDE\". min.intensity Numeric. Minimum intensity threshold intensity values considered missing. Default 0.01.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/clean_feature_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean Feature-level Data — clean_feature_data","text":"list containing cleaned msDT, BasicStats table summary statistics, Isol.Interference data.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/clean_feature_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Clean Feature-level Data — clean_feature_data","text":"function performs following steps: Removes rows protein data missing marked contaminant. Filters single-shot proteins peptide filtering. Removes features intensities specified minimum threshold. Filters features based isolation interference quantitative information. Consolidates multiple PSM measurements per feature. Outputs basic statistics cleaning process.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/clean_feature_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clean Feature-level Data — clean_feature_data","text":"","code":"if (FALSE) { # \\dontrun{   clean_data <- clean_feature_data(dat = my_data, metadata = my_metadata) } # }"},{"path":"https://fredrious.github.io/MSqb2/reference/collapse_fractions.html","id":null,"dir":"Reference","previous_headings":"","what":"Collapse Fractions in Mass Spectrometry Data — collapse_fractions","title":"Collapse Fractions in Mass Spectrometry Data — collapse_fractions","text":"function combines fractions mass spectrometry data using various methods summarize intensities features across fractions. function supports multiple methods summarizing fractions, including maximum intensity, median intensity, sum intensities, tagging fractions.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/collapse_fractions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collapse Fractions in Mass Spectrometry Data — collapse_fractions","text":"","code":"collapse_fractions(   dat = dat,   group = \"Pool\",   method = \"MAXset\",   path = Tables.path )"},{"path":"https://fredrious.github.io/MSqb2/reference/collapse_fractions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Collapse Fractions in Mass Spectrometry Data — collapse_fractions","text":"dat data.table containing MS data. table include columns Feature, Fraction, Condition label-free, Channel TMT, Intensity. group character string indicating grouping variable analysis (e.g., \"Pool\"). Default \"Pool\". method character string specifying method use combining fractions. Options include: \"MAXset\": Select fraction minimum missingness maximum intensity across conditions/channels. \"MAX\": Select fraction maximum intensity across conditions/channels, regardless missingness. \"MED\" \"MEDIAN\": Use median intensity across fractions. \"SUM\": Sum intensities across fractions. \"SINGLE\": Use peptides single fraction remove others. \"MULTI\", \"SEPERATE\", \"TAGFRAC\", \"TAGFRC\": Tag features fractions pass summarization. Default \"MAXset\". path character string specifying path save output summary tables. Default Tables.path.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/collapse_fractions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Collapse Fractions in Mass Spectrometry Data — collapse_fractions","text":"list two elements: \"dat.fcomb\": data.table containing combined fractions data. \"PrtPepCount_fraction\": data.table summarizing protein peptide counts fraction combination.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/collapse_fractions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Collapse Fractions in Mass Spectrometry Data — collapse_fractions","text":"function first identifies unique non-unique measurements (features measured one fraction per group). combines fractions based specified method. function can also generate summary protein peptide counts fraction combination.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/collapse_psm.html","id":null,"dir":"Reference","previous_headings":"","what":"Collapse Multiple PSM Measurements per feature — collapse_psm","title":"Collapse Multiple PSM Measurements per feature — collapse_psm","text":"function handles multiple PSM (Peptide Spectrum Match) measurements given feature, channel, run collapsing single measurement according specified method.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/collapse_psm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collapse Multiple PSM Measurements per feature — collapse_psm","text":"","code":"collapse_psm(dat, method = \"IONSSCORE\", by)"},{"path":"https://fredrious.github.io/MSqb2/reference/collapse_psm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Collapse Multiple PSM Measurements per feature — collapse_psm","text":"dat data.table containing PSM data. method Character. method used collapse multiple PSM measurements. Options include \"IONSSCORE\", \"MEAN\", \"MEDIAN\", \"MAX\", \"\". Default \"IONSSCORE\". Character vector. Columns used grouping collapsing PSM measurements.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/collapse_psm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Collapse Multiple PSM Measurements per feature — collapse_psm","text":"data.table collapsed PSM measurements according specified method.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/collapse_psm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Collapse Multiple PSM Measurements per feature — collapse_psm","text":"function offers several methods collapsing multiple PSM measurements given feature: IONSSCORE: Selects PSM highest ion score (ms method PD). MEAN: Computes mean intensity PSMs. MEDIAN: Computes median intensity PSMs. MAX: Selects maximum intensity among PSMs. : Keeps PSM measurements, tagging feature protein summarization.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/collapse_psm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Collapse Multiple PSM Measurements per feature — collapse_psm","text":"","code":"if (FALSE) { # \\dontrun{   collapsed_data <- collapse_psm(dat = my_data, method = \"MEAN\", by.col = c(\"Feature\", \"Channel\", \"Run\")) } # }"},{"path":"https://fredrious.github.io/MSqb2/reference/config_template.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a Configuration Template for MSqb2 Analysis — config_template","title":"Generate a Configuration Template for MSqb2 Analysis — config_template","text":"function generates configuration template MSqb2 analysis, providing set predefined parameters can customized specific mass spectrometry data processing tasks.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/config_template.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a Configuration Template for MSqb2 Analysis — config_template","text":"","code":"config_template()"},{"path":"https://fredrious.github.io/MSqb2/reference/config_template.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a Configuration Template for MSqb2 Analysis — config_template","text":"function return value sets configuration template predefined parameters. template includes various settings filtering, normalization, summarization, fraction combination, batch effect removal, missing data imputation, annotation, contrast definition, reformatting input data.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/config_template.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate a Configuration Template for MSqb2 Analysis — config_template","text":"config_template function initializes set configuration parameters MSqb2 analysis, can modified user needed. parameters grouped several categories: Filters: Settings filtering data based quantification information, isolation interference, intensity thresholds, . Normalization: Parameters normalizing data, including method selection subset normalization. Summarization: Options summarizing data, including method median polishing. Fraction Combination: Method combining data across fractions. Batch Effect Removal: Method removing batch effects data. Missing Data Imputation: Parameters handling missing data. Metadata Filtering: Options filtering dataset based metadata. Annotation: Source feature annotation organism study. Contrasts: Parameters defining contrasts differential expression analysis, including pairwise contrasts complex contrast definitions. Reformatting: Options reformatting input data, particularly data generated Proteome Discoverer. template intended customized users specific analysis needs, ensuring relevant parameters set running MSqb2 pipeline.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/config_template.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a Configuration Template for MSqb2 Analysis — config_template","text":"","code":"if (FALSE) { # \\dontrun{   # Generate a configuration template   config_template()    # Users can modify the parameters as needed before running the analysis } # }"},{"path":"https://fredrious.github.io/MSqb2/reference/create_qc_tables.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Quality Control Summary Tables — create_qc_tables","title":"Generate Quality Control Summary Tables — create_qc_tables","text":"function creates quality control (QC) summary tables MS data metadata. calculates basic statistics, missingness per fraction channel, checks feature overlap across fractions. results can saved Excel file returned list analysis.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/create_qc_tables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Quality Control Summary Tables — create_qc_tables","text":"","code":"create_qc_tables(   dat = dat,   metadata = metadata,   ms.software = \"PD\",   save = TRUE,   Tables.path = Tables.path )"},{"path":"https://fredrious.github.io/MSqb2/reference/create_qc_tables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Quality Control Summary Tables — create_qc_tables","text":"dat data.table containing mass spectrometry data. table include columns Feature, Protein, Peptide, Pool, Channel, Fraction, Intensity. metadata data.table containing metadata associated mass spectrometry data. table may include columns Pool, Channel, Fraction. ms.software character string specifying mass spectrometry software used, either \"PD\" \"MQ\". Default \"PD\" (Proteome Discoverer). save Logical. TRUE, QC tables saved Excel file. Default TRUE. Tables.path character string specifying directory output file saved. Default value Tables.path.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/create_qc_tables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Quality Control Summary Tables — create_qc_tables","text":"list containing QC summary tables generated analysis, may include: \"PSMsperFraction\": table showing overlap features across fractions. \"MissingPerFracChnl\": table summarizing missingness data per fraction channel. \"extMixFrac\": External mix fractions data (applicable).","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/create_qc_tables.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate Quality Control Summary Tables — create_qc_tables","text":"create_qc_tables function generates several summary tables essential quality control mass spectrometry-based proteomics studies: Fractions Overlap: Evaluates features distributed across multiple fractions, particularly useful TMT LFQ methods. Missingness Analysis: Provides summary missing data points per fraction channel. function merges MS data provided metadata, computes QC statistics, optionally saves results Excel file easy review analysis.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/dot-check.file.html","id":null,"dir":"Reference","previous_headings":"","what":"Check and Validate File Paths — .check.file","title":"Check and Validate File Paths — .check.file","text":"function verifies existence files specified input list. checks files either full paths exist, can found specified directory (dpth) working directory. files missing, function logs error warning optionally copies files dpth directory.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/dot-check.file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check and Validate File Paths — .check.file","text":"","code":".check.file(input, dpth = Data.path, toData = FALSE, interactive = TRUE)"},{"path":"https://fredrious.github.io/MSqb2/reference/dot-check.file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check and Validate File Paths — .check.file","text":"input named list names file names patterns values file paths. value NULL, ignored. dpth character string specifying directory path search files. Default Data.path. toData logical value indicating whether copy files dpth directory already . Default FALSE. interactive logical value indicating whether function prompt user interactively copy files. Default TRUE.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/dot-check.file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check and Validate File Paths — .check.file","text":"named list files paths. files copied, paths dpth directory returned.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/dot-check.file.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check and Validate File Paths — .check.file","text":"function first checks files input full paths exist. , updates output list sets toData TRUE. , searches files specified dpth directory , necessary, working directory. files still found, logs fatal message. toData TRUE interactive TRUE, user prompted copy missing files dpth directory.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/dot-check.file.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check and Validate File Paths — .check.file","text":"","code":"if (FALSE) { # \\dontrun{ # Example usage input_files <- list(file1 = \"path/to/file1.csv\", file2 = \"path/to/file2.csv\") output_files <- .check.file(input = input_files, dpth = tempdir(), toData = TRUE, interactive = TRUE) print(output_files) } # }"},{"path":"https://fredrious.github.io/MSqb2/reference/dot-checkBuildArgs.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate Build Arguments — .checkBuildArgs","title":"Validate Build Arguments — .checkBuildArgs","text":"function performs validation checks several build arguments. ensures arguments conform expected types, lengths, values. function utilizes various assertion functions validate arguments log assertions using MSqb2 package's logging functions.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/dot-checkBuildArgs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate Build Arguments — .checkBuildArgs","text":"","code":".checkBuildArgs()"},{"path":"https://fredrious.github.io/MSqb2/reference/dot-checkBuildArgs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Validate Build Arguments — .checkBuildArgs","text":"function imports objects parent environment using impTopEnv performs validation following arguments: measurements.file - Must character vector. metadata.file - Must character vector length 1. measurements.file.sheet - Either character vector length 1 integer, NULL. metadata.file.sheet - Either character vector length 1 integer, NULL. ms.software - Must one specified choices (\"MQ\", \"PD\"). analysis.name - Character vector length 1 NULL. ms.software - Character vector length 1, NULL. prefix - Character vector length 1 NULL. suffix - Character vector length 1 NULL. add.date.tag - Logical value.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/dot-find.file.html","id":null,"dir":"Reference","previous_headings":"","what":"Find Files Matching Input Patterns — .find.file","title":"Find Files Matching Input Patterns — .find.file","text":"function searches files specified directory match patterns provided input parameter. logs error multiple matches found pattern updates environment results.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/dot-find.file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find Files Matching Input Patterns — .find.file","text":"","code":".find.file(input, output, toData, where)"},{"path":"https://fredrious.github.io/MSqb2/reference/dot-find.file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find Files Matching Input Patterns — .find.file","text":"input named list names patterns search file names. output named list names expected outputs. function append found file paths list. toData named list additional data included environment searching. character string specifying directory search performed.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/dot-find.file.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Find Files Matching Input Patterns — .find.file","text":"function searches files directory match pattern input list. multiple files match single pattern, error logged using .logg function. function appends file paths output list updates environment output, input, toData.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/dot-find.file.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find Files Matching Input Patterns — .find.file","text":"","code":"if (FALSE) { # \\dontrun{ # Example usage input_patterns <- list(pattern1 = \"file1.csv\", pattern2 = \"file2.csv\") output_list <- list() additional_data <- list() directory <- tempdir()  # Create example files in the directory file.create(file.path(directory, \"file1.csv\")) file.create(file.path(directory, \"file2.csv\"))  .find.file(input = input_patterns, output = output_list, toData = additional_data, where = directory)  # Check the results in the environment print(output_list) } # }"},{"path":"https://fredrious.github.io/MSqb2/reference/dot-importConfigfile.html","id":null,"dir":"Reference","previous_headings":"","what":"Import Configuration Parameters from a File — .importConfigfile","title":"Import Configuration Parameters from a File — .importConfigfile","text":"Imports configuration parameters specified file generates new configuration file none exists. function typically called msqb_config supports workflow visualization configurations.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/dot-importConfigfile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import Configuration Parameters from a File — .importConfigfile","text":"","code":".importConfigfile(   conf.fl,   Scripts.path,   analysis.name,   add.date.tag,   whichConf,   conf.args )"},{"path":"https://fredrious.github.io/MSqb2/reference/dot-importConfigfile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import Configuration Parameters from a File — .importConfigfile","text":"conf.fl character string specifying path configuration file. NULL, new configuration file generated. Scripts.path character string specifying path scripts configuration files located. analysis.name character string specifying analysis name include configuration file name. Default NULL. add.date.tag character string specifying date tag append configuration file name. Default NULL. whichConf character string specifying type configuration (\"workflow\" \"viz\"). conf.args list additional configuration arguments can override parameters configuration file.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/dot-importConfigfile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import Configuration Parameters from a File — .importConfigfile","text":"character string specifying path imported generated configuration file.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/dot-importConfigfile.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Import Configuration Parameters from a File — .importConfigfile","text":"specified configuration file exist NULL, function creates new configuration file default parameters specified Scripts.path. function reads configuration file evaluates content parent environment.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/dot-l2w.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Long Data to Wide Format — .l2w","title":"Convert Long Data to Wide Format — .l2w","text":"Converts long-format data.table wide-format data table matrix, specific columns represent row column properties. function also allows combining multiple identifiers using specified separator.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/dot-l2w.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Long Data to Wide Format — .l2w","text":"","code":".l2w(dl, col.p, row.p, val, sp = \"&.&.&\", asMat = FALSE, Mat.rownm = NULL, ...)"},{"path":"https://fredrious.github.io/MSqb2/reference/dot-l2w.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Long Data to Wide Format — .l2w","text":"dl data.table long format converted. col.p character vector specifying column properties used wide format. row.p character vector specifying row properties used wide format. val character string specifying name value column input. sp character string used separator combine multiple identifiers row column properties. Defaults \"&.&.&\". asMat Logical; TRUE, returns result matrix. Defaults FALSE. Mat.rownm character vector specifying columns used row names matrix output. ... Additional arguments passed dcast.data.table, fun.aggregate.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/dot-l2w.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Long Data to Wide Format — .l2w","text":"wide-format data.table matrix.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/dot-l2w.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert Long Data to Wide Format — .l2w","text":"function reshapes long-format data wide format, combining row column properties using specified separator. useful preparing data downstream analysis, unique combination row column properties represented separate column. function handles data.table objects allows output returned either data.table matrix. matrix returned, optional row names can specified.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/dot-l2w.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert Long Data to Wide Format — .l2w","text":"","code":"# Example with a data.table input library(data.table) long_data <- data.table(   Category = rep(c(\"A\", \"B\", \"C\"), each = 3),   Group = rep(c(\"X\", \"Y\", \"Z\"), 3),   Abundance = 1:9 ) wide_data <- .l2w(long_data, col.p = \"Group\", row.p = \"Category\", val = \"Abundance\")  # Example returning a matrix wide_matrix <- .l2w(long_data, col.p = \"Group\", row.p = \"Category\", val = \"Abundance\", asMat = TRUE, Mat.rownm = \"Category\")"},{"path":"https://fredrious.github.io/MSqb2/reference/dot-logg.html","id":null,"dir":"Reference","previous_headings":"","what":"Log Messages with Levels and Outputs — .logg","title":"Log Messages with Levels and Outputs — .logg","text":"function logs messages different levels file console. uses logger package handle formatting output.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/dot-logg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log Messages with Levels and Outputs — .logg","text":"","code":".logg(level, msg)"},{"path":"https://fredrious.github.io/MSqb2/reference/dot-logg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log Messages with Levels and Outputs — .logg","text":"level log level (e.g., \"info\", \"warn\", \"error\", \"fatal\"). msg message log.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/dot-loggAssert.html","id":null,"dir":"Reference","previous_headings":"","what":"Log and Assert Conditions — .loggAssert","title":"Log and Assert Conditions — .loggAssert","text":"Asserts conditions logs error messages assertions fail. function captures processes assertion expressions, evaluates , logs errors using .logg function assertions met.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/dot-loggAssert.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log and Assert Conditions — .loggAssert","text":"","code":".loggAssert(xpr)"},{"path":"https://fredrious.github.io/MSqb2/reference/dot-loggAssert.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log and Assert Conditions — .loggAssert","text":"xpr expression containing assertion(s) evaluate. expression call checkmate assertion function (e.g., assertCharacter, assertLogical) without add parameter.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/dot-loggAssert.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Log and Assert Conditions — .loggAssert","text":"function return value. stops execution logs error assertion fails.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/dot-loggAssert.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Log and Assert Conditions — .loggAssert","text":"function captures provided expression, modifies include add parameter collecting assertion errors, evaluates modified expression. assertion fails, error messages collected logged using .logg function error level.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/dot-match_ModelFormula_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Match Model Formula with Metadata — .match_ModelFormula_metadata","title":"Match Model Formula with Metadata — .match_ModelFormula_metadata","text":"Checks whether parameters used model formula match column names given metadata design table. parameters match, user prompted either stop process correct issue proceed removing missing parameters model formula.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/dot-match_ModelFormula_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Match Model Formula with Metadata — .match_ModelFormula_metadata","text":"","code":".match_ModelFormula_metadata(dsgn, frm)"},{"path":"https://fredrious.github.io/MSqb2/reference/dot-match_ModelFormula_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Match Model Formula with Metadata — .match_ModelFormula_metadata","text":"dsgn data frame data table containing metadata design information. frm character string representing model formula matched metadata design.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/dot-match_ModelFormula_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Match Model Formula with Metadata — .match_ModelFormula_metadata","text":"updated model formula character string, missing parameters removed user chooses proceed.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/dot-match_ModelFormula_metadata.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Match Model Formula with Metadata — .match_ModelFormula_metadata","text":"function extracts variables used model formula compares column names metadata design. variables missing, message logged, user prompted choose whether stop process remove missing variables formula continue. function useful cases metadata design fully align model formula.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/dot-mk.dir.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Subdirectories with Custom Naming — .mk.dir","title":"Create Subdirectories with Custom Naming — .mk.dir","text":"function creates set subdirectories within specified path. names subdirectories constructed using optional prefix, suffix, analysis name, date tag parameters. also assigns paths subdirectories global environment variables later use.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/dot-mk.dir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Subdirectories with Custom Naming — .mk.dir","text":"","code":".mk.dir(   path,   sub.dir,   prefix = NULL,   analysis.name = NULL,   suffix = NULL,   add.date.tag = NULL )"},{"path":"https://fredrious.github.io/MSqb2/reference/dot-mk.dir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Subdirectories with Custom Naming — .mk.dir","text":"path character string specifying base path subdirectories created. sub.dir character vector subdirectory names created within base path. prefix optional character string prefix subdirectory name. Default NULL. analysis.name optional character string include subdirectory name. Default NULL. suffix optional character string suffix subdirectory name. Default NULL. add.date.tag optional character string representing date tag included subdirectory name. Default NULL.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/dot-mk.dir.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create Subdirectories with Custom Naming — .mk.dir","text":"function constructs subdirectory name concatenating prefix, subdirectory name, analysis name, suffix, date tag, separated underscores. parameters NULL, omitted name construction. creating directories, function assigns paths global environment variables named <sub_dir>.path subdirectory.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/dot-mk.dir.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Subdirectories with Custom Naming — .mk.dir","text":"","code":"if (FALSE) { # \\dontrun{ # Create subdirectories with specific naming components .mk.dir(   path = tempdir(),   sub.dir = c(\"data\", \"results\"),   prefix = \"project\",   analysis.name = \"analysis1\",   suffix = \"v1\",   add.date.tag = Sys.Date() )  # Check the paths assigned to global environment variables print(data.path) print(results.path) } # }"},{"path":"https://fredrious.github.io/MSqb2/reference/dot-w2l.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Wide Data to Long Format — .w2l","title":"Convert Wide Data to Long Format — .w2l","text":"Converts wide-format data table matrix long format, specific columns represent row column properties. function also allows splitting identifiers based separator reshapes data accordingly.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/dot-w2l.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Wide Data to Long Format — .w2l","text":"","code":".w2l(dw, val, col.p, row.p, sp = \"&.&.&\")"},{"path":"https://fredrious.github.io/MSqb2/reference/dot-w2l.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Wide Data to Long Format — .w2l","text":"dw data.table matrix wide format converted. val character string specifying name value column output. col.p character vector specifying column names output. row.p character vector specifying column names output. sp character string used separator split identifiers row column properties. Defaults \"&.&.&\".","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/dot-w2l.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Wide Data to Long Format — .w2l","text":"data.table long format specified row column properties, value column.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/dot-w2l.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert Wide Data to Long Format — .w2l","text":"function reshapes wide-format data (matrix) long format, splitting row column properties based specified separator. useful preparing data downstream analysis, unique combination row column properties represented separate row output. function handles matrices data.table objects, allowing flexibility input types. Row column properties split based specified separator expanded new columns.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/expTopEnv.html","id":null,"dir":"Reference","previous_headings":"","what":"Export Objects to Parent Environment — expTopEnv","title":"Export Objects to Parent Environment — expTopEnv","text":"function exports objects current environment parent environment. retrieves objects current environment places environment one level current environment.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/expTopEnv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export Objects to Parent Environment — expTopEnv","text":"","code":"expTopEnv()"},{"path":"https://fredrious.github.io/MSqb2/reference/expTopEnv.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Export Objects to Parent Environment — expTopEnv","text":"function uses mget get objects current environment list2env export parent environment. useful need make objects available higher-level scope.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/expTopEnv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Export Objects to Parent Environment — expTopEnv","text":"","code":"# Example usage: {   a <- 1   b <- 2   # a and b are in the current environment   expTopEnv()   # a and b should now be available in the parent environment   print(parent.frame()$a) # Should print 1   print(parent.frame()$b) # Should print 2 } #> [1] 1 #> [1] 2"},{"path":"https://fredrious.github.io/MSqb2/reference/expandList.html","id":null,"dir":"Reference","previous_headings":"","what":"Expand List into Parent Environment — expandList","title":"Expand List into Parent Environment — expandList","text":"function takes named list objects imports objects parent environment function call. objects list retrieved using names placed environment one level current environment.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/expandList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expand List into Parent Environment — expandList","text":"","code":"expandList(x)"},{"path":"https://fredrious.github.io/MSqb2/reference/expandList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expand List into Parent Environment — expandList","text":"x named list element imported parent environment.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/expandList.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Expand List into Parent Environment — expandList","text":"function uses mget retrieve objects environment specified list x list2env export parent environment. useful want make multiple objects list available environment function called.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/expandList.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expand List into Parent Environment — expandList","text":"","code":"# Example usage: a <- 1 b <- 2 my_list <- list(a = a, b = b) {   c <- 3   expandList(my_list)   # Now `a` and `b` are available in this environment   print(a) # Should print 1   print(b) # Should print 2 } #> [1] 1 #> [1] 2"},{"path":"https://fredrious.github.io/MSqb2/reference/export_DE_result.html","id":null,"dir":"Reference","previous_headings":"","what":"Export Differential Expression Results to Excel — export_DE_result","title":"Export Differential Expression Results to Excel — export_DE_result","text":"function exports results differential expression analysis Excel file. results organized sheets comparison, significant results highlighted easy identification.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/export_DE_result.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export Differential Expression Results to Excel — export_DE_result","text":"","code":"export_DE_result(   dat,   lfc.col = \"logFC\",   apv.col = \"adj.P.Val\",   gene.col = \"Gene\",   prot.col = \"Protein\",   negFill = \"skyblue1\",   posFill = \"pink\",   noSigFill = \"grey90\",   sigFill = \"red\",   sigFont = \"darkred\",   tableStyle = \"TableStyleLight8\",   file.name = \"limma.stat_output\",   path = Tables.path,   sig.level = 0.05,   silent = FALSE )"},{"path":"https://fredrious.github.io/MSqb2/reference/export_DE_result.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export Differential Expression Results to Excel — export_DE_result","text":"dat data.table containing differential expression results. include columns log-fold change, adjusted p-values, identifiers genes proteins. lfc.col character string specifying column name log-fold change values. Default \"logFC\". apv.col character string specifying column name adjusted p-values. Default \"adj.P.Val\". gene.col character string specifying column name gene identifiers. Default \"Gene\". prot.col character string specifying column name protein identifiers. Default \"Protein\". negFill character string specifying fill color negative log-fold changes. Default \"skyblue1\". posFill character string specifying fill color positive log-fold changes. Default \"pink\". noSigFill character string specifying fill color non-significant results. Default \"grey90\". sigFill character string specifying fill color significant results. Default \"red\". sigFont character string specifying font color significant results. Default \"darkred\". tableStyle character string specifying table style Excel sheets. Default \"TableStyleLight8\". file.name character string specifying base name output Excel file. Default \"limma.stat_output\". path character string specifying directory path Excel file saved. Default Tables.path. sig.level numeric value specifying significance level threshold adjusted p-values. Default 0.05. silent logical value. TRUE, suppresses messages function's execution. Default FALSE.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/export_DE_result.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export Differential Expression Results to Excel — export_DE_result","text":"Workbook object openxlsx package representing Excel file created.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/export_DE_result.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Export Differential Expression Results to Excel — export_DE_result","text":"export_DE_result function processes differential expression results, organizes comparison, saves Excel workbook. comparison placed separate sheet. Significant results highlighted configurable colors styles. comparison names exceed 30 characters, shortened, mapping file (longCompNames.txt) generated track original shortened names. ensures compatibility Excel's sheet name length limits.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/export_DE_result.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Export Differential Expression Results to Excel — export_DE_result","text":"","code":"if (FALSE) { # \\dontrun{   # Assuming `de_results` is a data.table with differential expression results   export_DE_result(de_results, file.name = \"DE_analysis_results\") } # }"},{"path":"https://fredrious.github.io/MSqb2/reference/fact2char.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Factor Columns to Character Columns in a Data Table — fact2char","title":"Convert Factor Columns to Character Columns in a Data Table — fact2char","text":"Converts factor columns data.table character columns.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/fact2char.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Factor Columns to Character Columns in a Data Table — fact2char","text":"","code":"fact2char(dat)"},{"path":"https://fredrious.github.io/MSqb2/reference/fact2char.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Factor Columns to Character Columns in a Data Table — fact2char","text":"dat data.table object factor columns need converted character columns.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/fact2char.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Factor Columns to Character Columns in a Data Table — fact2char","text":"data.table object factor columns converted character columns.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/fact2char.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert Factor Columns to Character Columns in a Data Table — fact2char","text":"function identifies columns data.table type factor converts character columns. factor columns present, original data.table returned unchanged.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/fact2char.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert Factor Columns to Character Columns in a Data Table — fact2char","text":"","code":"library(data.table) dat <- data.table(a = factor(c(\"x\", \"y\", \"z\")), b = 1:3) dat <- fact2char(dat) str(dat) # 'a' column is now character #> Classes ‘data.table’ and 'data.frame':\t3 obs. of  2 variables: #>  $ a: chr  \"x\" \"y\" \"z\" #>  $ b: int  1 2 3 #>  - attr(*, \".internal.selfref\")=<externalptr>"},{"path":"https://fredrious.github.io/MSqb2/reference/filter_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Filters metadata. — filter_metadata","title":"Filters metadata. — filter_metadata","text":"specific levels combination levels filtered input data data. 'filters', list-element vector length one, level completely removed input data. list-elements length larger one, combination levels vector used filter data. Column names need passed, column-matching done automatically. See examples details.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/filter_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filters metadata. — filter_metadata","text":"","code":"filter_metadata(dat, filters)"},{"path":"https://fredrious.github.io/MSqb2/reference/filter_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filters metadata. — filter_metadata","text":"dat data.table data.frame categorical variables (metadata). filters list character vectors containing levels input data.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/filter_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filters metadata. — filter_metadata","text":"filtered data","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/filter_metadata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filters metadata. — filter_metadata","text":"","code":"dat <- data.frame(Condition = rep(rep(paste0(\"Cond.\", 1:2), each = 5), 2) ,                  BioRep = rep(rep(paste0(\"Rep.\", 1:5)), 2),                  Pool = rep(paste0(\"Pool.\", 1:2), each = 10) )  # filter Rep.2 OR Pool.1 completely (both leveles will be removed). filter <- list(\"Rep.2\", \"Pool.1\") fdt <- filter_metadata(dat, filter)   # filter rows matched by: Rep.5 AND Cond.2 filter <- list(c(\"Rep.5\", \"Cond.2\")) fdt <- filter_metadata(dat, filter)   # filter rows matched by: Pool.1 AND Cond.1 AND Rep.3 filter <- list(c(\"Pool.1\", \"Cond.1\", \"Rep.3\")) fdt <- filter_metadata(dat, filter)   # filter rows matched by: Pool.1 AND Cond.1 AND Rep.3 OR Pool.1 AND Cond.1 AND Rep.4 filter <- list(c(\"Pool.1\", \"Cond.1\", \"Rep.3\"), c(\"Pool.1\", \"Cond.1\", \"Rep.4\")) fdt <- filter_metadata(dat, filter)   # filter rows matched by: Cond.1 AND Rep.3 OR Cond.1 AND Rep.5 filter <- list(c(\"Cond.1\", \"Rep.3\"), c(\"Cond.1\", \"Rep.5\")) fdt <- filter_metadata(dat, filter)   # filter rows matched by: Rep.5 AND Cond.2 OR Pool.1 AND Cond.1 filter <- list(c(\"Rep.5\", \"Cond.2\"), c(\"Pool.1\", \"Cond.1\")) fdt <- filter_metadata(dat, filter)"},{"path":"https://fredrious.github.io/MSqb2/reference/impTopEnv.html","id":null,"dir":"Reference","previous_headings":"","what":"Import Objects from Parent Environment — impTopEnv","title":"Import Objects from Parent Environment — impTopEnv","text":"function imports objects parent environment caller current environment. retrieves objects environment two levels current environment places environment one level .","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/impTopEnv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import Objects from Parent Environment — impTopEnv","text":"","code":"impTopEnv()"},{"path":"https://fredrious.github.io/MSqb2/reference/impTopEnv.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Import Objects from Parent Environment — impTopEnv","text":"function uses mget get objects parent environment list2env import current environment. useful need bring objects higher level environment current scope.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/impTopEnv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import Objects from Parent Environment — impTopEnv","text":"","code":"# Example usage: a <- 1 b <- 2 {   c <- 3   impTopEnv()   # Now `a` and `b` are available in this environment   print(a) # Should print 1   print(b) # Should print 2 } #> [1] 1 #> [1] 2"},{"path":"https://fredrious.github.io/MSqb2/reference/impute_missing_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Impute Missing Values in Data — impute_missing_values","title":"Impute Missing Values in Data — impute_missing_values","text":"function imputes missing values data set using various imputation methods. supports range imputation techniques including K-nearest neighbors (KNN), maximum likelihood estimation (MLE), quantile regression imputation left-censored data (QRILC), hybrid methods combining different strategies missing random (MAR) missing random (MNAR) data.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/impute_missing_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Impute Missing Values in Data — impute_missing_values","text":"","code":"impute_missing_values(   dat,   val = \"Abundance\",   col.p = \"Filename\",   row.p = \"Feature\",   na.imputation.method = \"v2-mnar\",   hybrid.mar = \"KNN\",   hybrid.mnar = \"QRILC\",   n_knn = 15,   tune.sigma = 0.5,   q = 0.01,   ... )"},{"path":"https://fredrious.github.io/MSqb2/reference/impute_missing_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Impute Missing Values in Data — impute_missing_values","text":"dat data.table containing data imputed. table include columns corresponding features, samples, values imputed. val character string specifying column name contains values imputed. Default \"Abundance\". col.p character string specifying column name(s) either contains unique sample names (e.g., \"Filename\"), combination can used uniqule address sample (e.g., c(\"Pool\", \"Channel\") MS method TMT). Default \"Filename\". row.p character string specifying column name contains feature identifiers. Default \"Feature\". na.imputation.method character string specifying method use imputation. Options include: \"V2\": method v2 msImpute package \"V2-MNAR\": method v2-mnar msImpute method specifically MNAR data. \"QRILC\": Quantile Regression Imputation Left-Censored data. \"KNN\": K-nearest neighbors. \"MLE\": Maximum Likelihood Estimation. \"MINPROB\": Impute using minimal probability. \"MINDET\": Impute using minimal detection limit. \"ZERO\": Impute zeros. \"HYBRID\": Hybrid method combining MAR MNAR strategies. Default \"v2-mnar\". hybrid.mar character string specifying method use MAR imputation using hybrid approach. Default \"KNN\". hybrid.mnar character string specifying method use MNAR imputation using hybrid approach. Default \"QRILC\". n_knn integer specifying number nearest neighbors use KNN imputation. Default 15. tune.sigma numeric value specifying tuning parameter sigma QRILC MinProb methods. Default 0.5. q numeric value specifying quantile MinDet MinProb methods. Default 0.01. ... Additional arguments passed imputation functions.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/impute_missing_values.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Impute Missing Values in Data — impute_missing_values","text":"data.table containing original data missing values imputed.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/impute_missing_values.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Impute Missing Values in Data — impute_missing_values","text":"impute_missing_values function offers several methods imputing missing data, depending nature missingness experimental design. -depth details please refere vignette packages msImpute imputeLCMD. \"v2\": method, provided msImpute package, designed missing random (MAR) data. particularly suitable DIA experiments missing values assumed random. \"v2-mnar\": method extends \"v2\" handle missing random (MNAR) data, making suitable cases missing values likely low-abundance features. often case DDA (like TMT) experiments, absence data might systematically related intensity signal.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/int2fact.html","id":null,"dir":"Reference","previous_headings":"","what":"integer to factor converter — int2fact","title":"integer to factor converter — int2fact","text":"Converts data.frame data.table columns class integer factor.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/int2fact.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"integer to factor converter — int2fact","text":"","code":"int2fact(dat)"},{"path":"https://fredrious.github.io/MSqb2/reference/int2fact.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"integer to factor converter — int2fact","text":"dat Input data class data.table data.frame.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/int2fact.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"integer to factor converter — int2fact","text":"input data dat columns class integer converted factor.","code":""},{"path":[]},{"path":"https://fredrious.github.io/MSqb2/reference/int2fact.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"integer to factor converter — int2fact","text":"","code":"DT <- data.table(x = c(1., 2.), y = c(1L, 2L), z = c(\"1\", \"2\")) # DT <- data.frame(x = c(1.,2.), y = c(1L,2L), z = c(\"1\",\"2\")) sapply(DT, class) #>           x           y           z  #>   \"numeric\"   \"integer\" \"character\"  int2fact(DT) #>        x      y      z #>    <num> <fctr> <char> #> 1:     1      1      1 #> 2:     2      2      2 sapply(DT, class) #>           x           y           z  #>   \"numeric\"    \"factor\" \"character\""},{"path":"https://fredrious.github.io/MSqb2/reference/median_normalisation.html","id":null,"dir":"Reference","previous_headings":"","what":"Median Normalization of Data — median_normalisation","title":"Median Normalization of Data — median_normalisation","text":"function performs median normalization dataset. Optionally, can log2 transform data normalization perform normalization based subset data specified user.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/median_normalisation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Median Normalization of Data — median_normalisation","text":"","code":"median_normalisation(   dat,   col.p,   row.p,   val,   log2transform = TRUE,   normalize.bySubset = NULL,   normalize.bySubset.matchTerm = NULL,   normalize.bySubset.matchTerm.exactMatch = FALSE )"},{"path":"https://fredrious.github.io/MSqb2/reference/median_normalisation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Median Normalization of Data — median_normalisation","text":"dat data.table containing data normalized. table include columns features, samples, values normalized. col.p character string specifying column name contains sample identifiers (e.g., \"SampleID\"). row.p character string specifying column name contains feature identifiers (e.g., \"Protein\"). val character string specifying column name contains values normalized (e.g., \"Abundance\"). log2transform Logical. TRUE, log2 transformation applied data normalization. Default TRUE. normalize.bySubset character string specifying column name used subsetting data normalization. Default NULL. normalize.bySubset.matchTerm character string specifying term match within subset column normalization. Default NULL. normalize.bySubset.matchTerm.exactMatch Logical. TRUE, requires exact match normalize.bySubset.matchTerm. Default FALSE.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/median_normalisation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Median Normalization of Data — median_normalisation","text":"data.table containing normalized data, structure input dat.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/median_normalisation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Median Normalization of Data — median_normalisation","text":"median_normalisation function applies median normalization data, adjusts values sample median value consistent across samples. particularly useful MS omics data global shifts signal intensities samples need corrected. function allows : Log2 Transformation: Optional log2 transformation data prior normalization. Subset Normalization: Normalization based subset data, defined normalize.bySubset parameter. normalize.bySubset provided, function calculates median based specified subset, otherwise, normalizes data using entire dataset. function also supports partial exact matching subsetting.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/median_normalisation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Median Normalization of Data — median_normalisation","text":"","code":"if (FALSE) { # \\dontrun{   data <- data.table(     SampleID = c(\"S1\", \"S2\", \"S3\", \"S4\"),     Protein = c(\"P1\", \"P2\", \"P1\", \"P2\"),     Abundance = c(1.2, 2.3, 3.1, 4.2)   )    normalized_data <- median_normalisation(data, col.p = \"SampleID\", row.p = \"Protein\", val = \"Abundance\") } # }"},{"path":"https://fredrious.github.io/MSqb2/reference/merge_ms_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge Metadata with Mass Spectrometry Data — merge_ms_metadata","title":"Merge Metadata with Mass Spectrometry Data — merge_ms_metadata","text":"function merges metadata mass spectrometry data, ensuring consistency pools channels datasets. performs checks validate presence consistency Pool Channel information datasets, adjusts necessary match.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/merge_ms_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge Metadata with Mass Spectrometry Data — merge_ms_metadata","text":"","code":"merge_ms_metadata(msDT, metadata, extMixFrac, int.nm)"},{"path":"https://fredrious.github.io/MSqb2/reference/merge_ms_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge Metadata with Mass Spectrometry Data — merge_ms_metadata","text":"msDT data.table containing mass spectrometry data. table include columns Pool, Channel, Protein. metadata data.table containing metadata merged msDT. table include columns Pool Channel. extMixFrac data.table containing additional information external mix fractions, used Pool information missing metadata. int.nm character string specifying internal name used processing. (parameter referenced function used within provided code.)","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/merge_ms_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge Metadata with Mass Spectrometry Data — merge_ms_metadata","text":"list containing two elements: \"msDT\": merged mass spectrometry data data.table. \"metadata\": merged metadata data.table.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/merge_ms_metadata.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Merge Metadata with Mass Spectrometry Data — merge_ms_metadata","text":"merge_ms_metadata function ensures Pool Channel columns mass spectrometry data (msDT) metadata consistent. checks presence Pool information datasets, adjusts levels necessary, merges metadata mass spectrometry data. Specific steps include: Verifying correcting Pool levels msDT metadata. Handling cases Pool information missing either msDT metadata. Ensuring consistency Channel information datasets. Merging metadata msDT consideration potential inconsistencies.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/msqb_build.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct the skeleton of the analysis — msqb_build","title":"Construct the skeleton of the analysis — msqb_build","text":"function checks input files construct folder structure store output workflow. default, current directory function called considered project path basename path considered project name. Three main directories created project path: 'Data', 'Analysis' 'Scripts'. output round analysis saved 'Analysis' separate directory named argument 'analysis.name'. 'analysis.name' NULL, output files stored directly 'Analysis' directory. log file generated call function 'msqb_build'. log files date time tag saved '_log_files' sub-directory 'Analysis' directory.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/msqb_build.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct the skeleton of the analysis — msqb_build","text":"","code":"msqb_build(   measurements.file,   metadata.file,   measurements.file.sheet = 1,   metadata.file.sheet = 1,   ms.software,   analysis.name = NULL,   prefix = NULL,   suffix = NULL,   add.date.tag = TRUE,   interactive = TRUE )"},{"path":"https://fredrious.github.io/MSqb2/reference/msqb_build.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct the skeleton of the analysis — msqb_build","text":"measurements.file character string vector, naming file(s) containing MS measurements. input file(s) must either PSM-level file(s) ProteomDiscoverer evidence file MaxQuant. one filename provided, files merged construct single dataset. metadata.file character string, naming excel file containing experimental design. measurements.file.sheet either character string (name sheet), integer (position sheet). relevant measurements.file xlsx family. default first sheet read. metadata.file.sheet either character string (name sheet), integer (position sheet). default first sheet read. ms.software character, naming software used generate ms data. Options 'MQ' MaxQuant 'PD' Proteome Discoverer. analysis.name character string. provided, directory provided name created Analysis directory. output workflow saved directory. prefix character string added beginning directory names. suffix character string added end directory names. add.date.tag logical. TRUE, date analysis added Analysis directory. Default TRUE. interactive logical.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/msqb_build.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct the skeleton of the analysis — msqb_build","text":"list containing paths input parameters.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/msqb_config.html","id":null,"dir":"Reference","previous_headings":"","what":"Configure MSqb2 Analysis Parameters — msqb_config","title":"Configure MSqb2 Analysis Parameters — msqb_config","text":"function sets configures parameters MSqb2 analysis. allows users specify various settings related filtering, normalization, summarization, fraction combination, batch correction, missing data imputation, among others.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/msqb_config.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Configure MSqb2 Analysis Parameters — msqb_config","text":"","code":"msqb_config(   build.para,   config.file = NULL,   interactive = TRUE,   study.variable = \"protein\",   filter.by.quaninfo = \"auto\",   isolation.interference.cutoff = 75,   collapse_psm_method = \"ionscore\",   filter.singleshot.proteins = \"ByPeptide\",   min.intensity = 0.01,   normalization.method = \"vsn\",   normalize.bySubset = NULL,   summarization.method = \"tmp\",   medianpolish.method = \"column.eff\",   medianpolish.byPool = FALSE,   fraction.collapse.method = \"maxset\",   batch.corr.method = \"none\",   na.imputation.method = \"none\",   filter.metadata = NULL,   feature.annotation.source = \"psm.file\",   study.organism = NULL,   pairwise.contrasts = TRUE,   manual.contrasts = NULL,   choose.contrasts = FALSE,   pairwise.denominator = NULL,   protein.column = \"Master Protein Accessions\",   peptide.seq.column = \"Sequence\",   peptide.annot.seq.column = \"Annotated Sequence\",   charge.column = \"Charge\",   FileID.column = \"File ID\",   quaninfo.column = \"Quan Info\",   isolation.interference.column = \"Isolation Interference [%]\",   ion.score.column = \"Ions Score\",   filename.column = \"Spectrum File\",   abundance.columns = \"Abundance\",   desc.column = \"Master Protein Descriptions\",   contaminant.column = \"Contaminant\",   marked.as.column = \"Marked as\",   subsymDT = data.table(symout = c(\"\\\\~\", \"\\\\+\", \"\\\\:\", \"\\\\|\", \"\\\\-\", \"\\\\(\",     \"\\\\)\", \"\\\\/\", \" \"), symin = c(\"_\", \".p\", \".\", \".\", \"_\", \".\", \".\", \".\", \".\")),   ... )"},{"path":"https://fredrious.github.io/MSqb2/reference/msqb_config.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Configure MSqb2 Analysis Parameters — msqb_config","text":"build.para list object containing build parameters MSqb2 analysis pipeline. list generated function MSqb_build(). config.file character string specifying path configuration file load. NULL, configuration file loaded. Default NULL. interactive Logical. TRUE, function may prompt user input execution. Default TRUE. study.variable character string specifying main study variable, either \"protein\" \"peptide\". Default \"protein\". filter..quaninfo character string specifying filter data based quantification information. Default \"auto\". isolation.interference.cutoff Numeric. cutoff value isolation interference, used filter data. Default 75. collapse_psm_method character string specifying method handling multiple features. Default \"ionscore\". filter.singleshot.proteins character string specifying filter single-shot proteins. Options \"ByPeptide\" \"ByProtein\". Default \"ByPeptide\". min.intensity Numeric. minimum intensity threshold filtering data. Default 0.01. normalization.method character string specifying normalization method. Options include \"vsn\", \"quantile\", \"median\", etc. Default \"vsn\". normalize.bySubset character string referring column name NULL. specified, normalization performed subset defined labels specified data column. Default NULL. summarization.method character string specifying method summarizing data. Options include \"tmp\", \"median\", \"mean\" \"sum\" Default \"tmp\". medianpolish.method character string specifying method median polishing. Options include \"column.eff\" \"residual\". Default \"column.eff\". medianpolish.byPool Logical. TRUE, median polishing performed pool (TMT method). Default FALSE. fraction.collapse.method character string specifying method collapsing fractions. Options \"MAXset\", \"max\", \"median\", \"sum\", \"single\", \"multi\". Default \"MAXset\". batch.corr.method character string specifying method batch correction. Options include \"limma\", \"svn\" \"none\". Default \"none\". na.imputation.method character string specifying method imputing missing data. Options include methods packages msImpute imputeQRILC. Default \"none\". filter.metadata character string NULL. specified, metadata filtered accordingly. details see help filter_metadata() function. Default NULL. feature.annotation.source character string specifying source feature annotation. Options include \"psm.file\", \"uniprot\", \"uniprot.file\" \"none\". Default \"psm.file\". study.organism character string specifying organism studied. feature.annotation.source set \"uniprot\". Default NULL. pairwise.contrasts Logical. TRUE, pairwise contrasts automatically generated. Default TRUE. manual.contrasts list specifying manual contrasts applied. Default NULL. choose.contrasts Logical. TRUE, allows user choose contrasts interactively. Default FALSE. pairwise.denominator character string NULL specifying denominator pairwise contrasts. Default NULL. protein.column character string specifying column name proteins input data. Default \"Master Protein Accessions\". peptide.seq.column character string specifying column name peptide sequences input data. Default \"Sequence\". peptide.annot.seq.column character string specifying column name annotated peptide sequences. Default \"Annotated Sequence\". charge.column character string specifying column name charge input data. Default \"Charge\". FileID.column character string specifying column name file IDs input data. Default \"File ID\". quaninfo.column character string specifying column name quantification information. Default \"Quan Info\". isolation.interference.column character string specifying column name isolation interference. Default \"Isolation Interference [%]\". ion.score.column character string specifying column name ion scores. Default \"Ions Score\". filename.column character string specifying column name filenames input data. Default \"Spectrum File\". abundance.columns character string specifying column name abundance values. Default \"Abundance\". desc.column character string specifying column name protein descriptions. Default \"Master Protein Descriptions\". contaminant.column character string specifying column name contaminants. Default \"Contaminant\". marked..column character string specifying column name marked entries input data. Default \"Marked \". subsymDT data.table defining symbolic substitutions, columns symout symin output input symbols respectively. ... Additional arguments passed methods functions.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/msqb_config.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Configure MSqb2 Analysis Parameters — msqb_config","text":"list object containing configured parameters MSqb2 analysis.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/msqb_config.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Configure MSqb2 Analysis Parameters — msqb_config","text":"msqb_config function provides comprehensive interface configuring MSqb2 analysis. Users can specify various filtering criteria, normalization methods, summarization techniques, parameters necessary processing proteomics data. function highly customizable can used interactively predefined configurations.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/msqb_workflow.html","id":null,"dir":"Reference","previous_headings":"","what":"MSqb Workflow for Proteomics Data Analysis — msqb_workflow","title":"MSqb Workflow for Proteomics Data Analysis — msqb_workflow","text":"function orchestrates entire workflow MS proteomics data analysis, including data reformatting, normalization, batch effect removal, protein summarization, differential expression analysis, .","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/msqb_workflow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MSqb Workflow for Proteomics Data Analysis — msqb_workflow","text":"","code":"msqb_workflow(build.para, config.para = NULL, config.file = NULL, ...)"},{"path":"https://fredrious.github.io/MSqb2/reference/msqb_workflow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"MSqb Workflow for Proteomics Data Analysis — msqb_workflow","text":"build.para list parameters required build workflow environment (see MSqb_build() function). config.para list configuration parameters workflow. NULL, read config.file (see MSqb_config() function). config.file path configuration file. file used config.para provided. ... Additional parameters passed internal functions.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/msqb_workflow.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"MSqb Workflow for Proteomics Data Analysis — msqb_workflow","text":"environment containing results workflow, including processed data tables statistical results.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/msqb_workflow.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"MSqb Workflow for Proteomics Data Analysis — msqb_workflow","text":"","code":"if (FALSE) { # \\dontrun{ result_env <- msqb_workflow(   build.para = list(param1 = value1, param2 = value2),   config.file = \"config.R\" ) } # }"},{"path":"https://fredrious.github.io/MSqb2/reference/normalise_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalize MS Data — normalise_data","title":"Normalize MS Data — normalise_data","text":"function normalizes mass spectrometry data using one three available methods: Variance Stabilizing Normalization (VSN), median normalization, quantile normalization. function can also handle normalization specific data subsets.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/normalise_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalize MS Data — normalise_data","text":"","code":"normalise_data(method = \"VSN\", path = Tables.path, ...)"},{"path":"https://fredrious.github.io/MSqb2/reference/normalise_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalize MS Data — normalise_data","text":"method Character. normalization method use. Options \"vsn\", \"median\", \"quantile\". Default \"VSN\". path Character. path output Excel file normalized non-normalized data saved. Default Tables.path. ... Additional arguments passed normalization functions, including column row identifiers (col.p, row.p), intensity column (val), specific parameters normalization method.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/normalise_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalize MS Data — normalise_data","text":"data.table containing normalized data, intensity values replaced normalized abundance values.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/normalise_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Normalize MS Data — normalise_data","text":"vsn: Variance Stabilizing Normalization applied, option normalize subset data. median: Median normalization can applied, log2 transformation default. quantile: Quantile normalization performed, transforming intensity distributions samples identical. function also generates Excel file containing normalized non-normalized peptide-level data.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/normalise_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Normalize MS Data — normalise_data","text":"","code":"if (FALSE) { # \\dontrun{ normalized_data <- normalise_data(   method = \"VSN\",   dat = my_data,   val = \"Intensity\",   path = \"output_directory\" ) } # }"},{"path":"https://fredrious.github.io/MSqb2/reference/order.num.html","id":null,"dir":"Reference","previous_headings":"","what":"Order a data.table by Alphanumeric Column — order.num","title":"Order a data.table by Alphanumeric Column — order.num","text":"function orders data.table based alphanumeric sorting specified column. sorting done extracting numeric components column values preserving overall alphanumeric order. particularly useful cases numeric sequences embedded within text.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/order.num.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Order a data.table by Alphanumeric Column — order.num","text":"","code":"order.num(dat, x)"},{"path":"https://fredrious.github.io/MSqb2/reference/order.num.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Order a data.table by Alphanumeric Column — order.num","text":"dat data.table containing data ordered. x string specifying column name ordered. column can either character factor type.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/order.num.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Order a data.table by Alphanumeric Column — order.num","text":"input data.table ordered specified column.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/order.num.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Order a data.table by Alphanumeric Column — order.num","text":"function extracts numeric values specified column orders data.table based numbers. handles mixed alphanumeric values focusing numeric part maintaining overall alphanumeric order. column factor, levels also updated reflect new order. underlying idea based solution Stack Overflow.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/order.num.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Order a data.table by Alphanumeric Column — order.num","text":"","code":"library(data.table) dat <- data.table(id = c(\"item1\", \"item10\", \"item2\", \"item20\")) ordered_dt <- order.num(dat, \"id\") print(ordered_dt) #>        id #>    <char> #> 1:  item1 #> 2:  item2 #> 3: item10 #> 4: item20"},{"path":"https://fredrious.github.io/MSqb2/reference/protein_aggregation.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize Peptide- or Feature-Level Data to Protein-Level Data — protein_aggregation","title":"Summarize Peptide- or Feature-Level Data to Protein-Level Data — protein_aggregation","text":"function aggregates peptide-level Feature-Level data protein-level data using various summarization methods.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/protein_aggregation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize Peptide- or Feature-Level Data to Protein-Level Data — protein_aggregation","text":"","code":"protein_aggregation(   dat,   var = \"Abundance\",   groupby = \"Protein\",   summarization.method = \"tmp\",   medianpolish.byPool = FALSE,   block = \"Pool\",   medianpolish.method = \"column.eff\",   rm.total.missingness = TRUE,   Tables.path = Tables.path )"},{"path":"https://fredrious.github.io/MSqb2/reference/protein_aggregation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize Peptide- or Feature-Level Data to Protein-Level Data — protein_aggregation","text":"dat data.table containing peptide-level data. var character string specifying column name holds values summarized (e.g., \"Abundance\"). groupby character string specifying column name used group data proteins (e.g., \"Protein\"). summarization.method character string specifying summarization method use. Options \"tmp\" (median polish), \"sum\", \"median\" \"mean\".f medianpolish.byPool logical indicating whether perform median polish pool. block character string specifying column name used define blocks (e.g., \"Pool\"). medianpolish.method character string specifying method median polish summarization. Options \"column.eff\" (default) \"residual\". rm.total.missingness logical indicating whether remove proteins complete missingness across samples. Default TRUE. Tables.path character string specifying directory output Excel file protein abundance data saved.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/protein_aggregation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize Peptide- or Feature-Level Data to Protein-Level Data — protein_aggregation","text":"data.table containing summarized protein-level data additional columns peptide PSM counts.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/protein_aggregation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarize Peptide- or Feature-Level Data to Protein-Level Data — protein_aggregation","text":"","code":"if (FALSE) { # \\dontrun{ # Example usage of the protein_aggregation function protein_data <- protein_aggregation(   dat = peptide_data,   var = \"Abundance\",   groupby = \"Protein\",   medianpolish.byPool = FALSE,   block = \"Pool\",   summarization.method = \"tmp\",   medianpolish.method = \"column.eff\",   rm.total.missingness = TRUE,   Tables.path = \"path/to/save/tables\" ) } # }"},{"path":"https://fredrious.github.io/MSqb2/reference/quantile_normalisation.html","id":null,"dir":"Reference","previous_headings":"","what":"Quantile Normalization of Data — quantile_normalisation","title":"Quantile Normalization of Data — quantile_normalisation","text":"function performs quantile normalization mass spectrometry data, option log2 transform data normalization.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/quantile_normalisation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quantile Normalization of Data — quantile_normalisation","text":"","code":"quantile_normalisation(dat, col.p, row.p, val, log2transform = TRUE)"},{"path":"https://fredrious.github.io/MSqb2/reference/quantile_normalisation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quantile Normalization of Data — quantile_normalisation","text":"dat data.table containing data normalized. col.p Character vector. Column names used grouping data (e.g., sample condition). row.p Character vector. Row identifiers, typically feature protein IDs. val Character. column name representing intensity abundance values normalized. log2transform Logical. Whether log2 transform data normalization. Default TRUE.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/quantile_normalisation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Quantile Normalization of Data — quantile_normalisation","text":"data.table quantile normalized intensity values.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/quantile_normalisation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Quantile Normalization of Data — quantile_normalisation","text":"function uses normalize.quantiles function preprocessCore package perform quantile normalization. method makes distribution intensity values across samples. Log2 transformation applied normalization log2transform set TRUE.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/quantile_normalisation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Quantile Normalization of Data — quantile_normalisation","text":"","code":"if (FALSE) { # \\dontrun{   normalized_data <- quantile_normalisation(dat = my_data, col.p = \"SampleID\", row.p = \"ProteinID\", val = \"Intensity\") } # }"},{"path":"https://fredrious.github.io/MSqb2/reference/read.file.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Data from File — read.file","title":"Read Data from File — read.file","text":"Reads data file, supporting Excel files (.xlsx, .xls) tab-delimited text files. function converts data data.table object applies conversion factors necessary.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/read.file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Data from File — read.file","text":"","code":"read.file(file, sheet = 1)"},{"path":"https://fredrious.github.io/MSqb2/reference/read.file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Data from File — read.file","text":"file character string specifying file path read. file can Excel file (.xlsx .xls extension) tab-delimited text file. sheet integer specifying sheet number read Excel file. Default 1.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/read.file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read Data from File — read.file","text":"data.table object containing data read file.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/read.file.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read Data from File — read.file","text":"function checks file extension determine whether use readxl::read_excel Excel files data.table::fread text files. reading data, function converts data.table applies char2fact ensure character columns converted factors.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/read.file.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read Data from File — read.file","text":"","code":"if (FALSE) { # \\dontrun{ # Example usage with a tab-delimited file data <- read.file(\"path/to/datafile.txt\")  # Example usage with an Excel file data <- read.file(\"path/to/datafile.xlsx\", sheet = 2) } # }"},{"path":"https://fredrious.github.io/MSqb2/reference/readConfigPara.html","id":null,"dir":"Reference","previous_headings":"","what":"Read or Generate Configuration Parameters — readConfigPara","title":"Read or Generate Configuration Parameters — readConfigPara","text":"Reads configuration parameters provided file generates based build parameters. Handles cases configuration parameters configuration file provided, prompting user choose use. function can work workflow visualization configuration types.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/readConfigPara.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read or Generate Configuration Parameters — readConfigPara","text":"","code":"readConfigPara(build.para, config.para, config.file, config.type, ...)"},{"path":"https://fredrious.github.io/MSqb2/reference/readConfigPara.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read or Generate Configuration Parameters — readConfigPara","text":"build.para list containing build parameters. generated msqb_build function. config.para list containing pre-existing configuration parameters (optional). config.file character string specifying path configuration file (optional). config.type character string indicating type configuration: either \"wf\" workflow \"viz\" visualization. ... Additional arguments passed configuration functions (msqb_config msqb_config_viz).","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/readConfigPara.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read or Generate Configuration Parameters — readConfigPara","text":"function return value directly. Instead, modifies environment expanding exporting configuration parameters.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/readConfigPara.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read or Generate Configuration Parameters — readConfigPara","text":"function designed handle reading generation configuration parameters based build parameters specified configuration type. config.file config.para provided, user prompted choose use. neither provided, function attempts generate configuration parameters using specified configuration function. function expands configuration list exports top environment, making available processing workflow.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/readConfigPara.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read or Generate Configuration Parameters — readConfigPara","text":"","code":"if (FALSE) { # \\dontrun{ # Assuming `build.para` is already defined readConfigPara(build.para = build.para, config.file = \"path/to/config.R\", config.type = \"wf\") } # }"},{"path":"https://fredrious.github.io/MSqb2/reference/reformat_PD_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Reformat PSM Data from Proteome Discoverer — reformat_PD_data","title":"Reformat PSM Data from Proteome Discoverer — reformat_PD_data","text":"function reformats PSM-level data specifically generated Proteome Discoverer software, merging metadata performing necessary clean-steps downstream analysis.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/reformat_PD_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reformat PSM Data from Proteome Discoverer — reformat_PD_data","text":"","code":"reformat_PD_data(   feat.dt = feat.dt,   metadata = metadata,   protein.column = \"Master Protein Accessions\",   peptide.seq.column = \"Sequence\",   peptide.annot.seq.column = \"Annotated Sequence\",   charge.column = \"Charge\",   FileID.column = \"File ID\",   ion.score.column = \"Score\",   quaninfo.column = \"Quan Info\",   isolation.interference.column = \"Isolation Interference [%]\",   desc.column = \"Master Protein Descriptions\",   contaminant.column = \"Contaminant\",   marked.as.column = \"Marked as\",   abundance.columns = \"Abundance\",   ms.software = \"PD\",   subsymDT = data.table(symout = c(\"\\\\~\", \"\\\\+\", \"\\\\:\", \"\\\\|\", \"\\\\-\", \"\\\\(\",     \"\\\\)\", \"\\\\/\", \" \"), symin = c(\"_\", \".p\", \".\", \".\", \"_\", \".\", \".\", \".\", \".\")) )"},{"path":"https://fredrious.github.io/MSqb2/reference/reformat_PD_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reformat PSM Data from Proteome Discoverer — reformat_PD_data","text":"feat.dt data.table containing PSM-level data Proteome Discoverer. metadata data.table containing metadata samples. protein.column Name column containing protein accession identifiers. Default \"Master Protein Accessions\". peptide.seq.column Name column containing peptide sequences. Default \"Sequence\". peptide.annot.seq.column Name column containing annotated peptide sequences. Default \"Annotated Sequence\". charge.column Name column containing charge states. Default \"Charge\". FileID.column Name column containing file IDs. Default \"File ID\". ion.score.column Name column containing ion scores. Default \"Score\". quaninfo.column Name column containing quantitation information. Default \"Quan Info\". isolation.interference.column Name column containing isolation interference values. Default \"Isolation Interference %\". desc.column Name column containing protein descriptions. Default \"Master Protein Descriptions\". contaminant.column Name column indicating contaminants. Default \"Contaminant\". marked..column Name column indicating marked entries. Default \"Marked \". abundance.columns Prefix columns containing abundance intensity values. Default \"Abundance\". ms.software Character string indicating mass spectrometry software used. Default \"PD\". subsymDT data.table used replace special characters column names. Default predefined data.table.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/reformat_PD_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reformat PSM Data from Proteome Discoverer — reformat_PD_data","text":"list containing reformatted PSM data, metadata, annotation data.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/reformat_PD_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reformat PSM Data from Proteome Discoverer — reformat_PD_data","text":"","code":"if (FALSE) { # \\dontrun{ # Example usage of reformat_PD_data function for data from Proteome Discoverer reformatted_data <- reformat_PD_data(feat.dt = my_data, metadata = my_metadata) } # }"},{"path":"https://fredrious.github.io/MSqb2/reference/remove_batch_effect.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove Batch Effects from Data — remove_batch_effect","title":"Remove Batch Effects from Data — remove_batch_effect","text":"function removes batch effects dataset using methods implimented packages limma, sva, others. returns cleaned data batch effects removed.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/remove_batch_effect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove Batch Effects from Data — remove_batch_effect","text":"","code":"remove_batch_effect(   dat,   metadt,   val = \"Abundance\",   batch.corr.method = \"limma\",   row.p = \"auto\",   col.p = \"auto\",   model.formula,   sva.n.sv = NULL )"},{"path":"https://fredrious.github.io/MSqb2/reference/remove_batch_effect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove Batch Effects from Data — remove_batch_effect","text":"dat data.table containing data corrected batch effects. metadt data.table containing metadata corresponding data. val character string specifying column name containing values corrected. Default \"Abundance\". batch.corr.method character string specifying batch correction method used. Options \"limma\" \"sva\". Default \"limma\". row.p character vector specifying row identifiers data. Default \"auto\". col.p character vector specifying column identifiers data. Default \"auto\". model.formula formula specifying model batch correction. sva.n.sv integer specifying number surrogate variables estimate using sva method. Default NULL.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/remove_batch_effect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove Batch Effects from Data — remove_batch_effect","text":"data.table batch effects removed. using sva, returns list containing cleaned data sva object.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/remove_batch_effect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove Batch Effects from Data — remove_batch_effect","text":"","code":"if (FALSE) { # \\dontrun{ # Example usage of remove_batch_effect function cleaned_data <- remove_batch_effect(dat, metadt, batch.corr.method = \"limma\") } # }"},{"path":"https://fredrious.github.io/MSqb2/reference/str_sort_numeric.html","id":null,"dir":"Reference","previous_headings":"","what":"Sort a character vector with numeric order — str_sort_numeric","title":"Sort a character vector with numeric order — str_sort_numeric","text":"function sorts character vector way numbers within strings considered numeric values sorting.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/str_sort_numeric.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sort a character vector with numeric order — str_sort_numeric","text":"","code":"str_sort_numeric(x, decreasing = FALSE)"},{"path":"https://fredrious.github.io/MSqb2/reference/str_sort_numeric.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sort a character vector with numeric order — str_sort_numeric","text":"x character vector sorted. decreasing Logical; TRUE, sort decreasing order.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/str_sort_numeric.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sort a character vector with numeric order — str_sort_numeric","text":"character vector sorted based numeric values within strings.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/str_sort_numeric.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sort a character vector with numeric order — str_sort_numeric","text":"","code":"str_sort_numeric(c(\"file2.txt\", \"file10.txt\", \"file1.txt\")) #> [1] \"file1.txt\"  \"file2.txt\"  \"file10.txt\" # Returns: \"file1.txt\" \"file2.txt\" \"file10.txt\""},{"path":"https://fredrious.github.io/MSqb2/reference/vsn_normalisation.html","id":null,"dir":"Reference","previous_headings":"","what":"VSN Normalization — vsn_normalisation","title":"VSN Normalization — vsn_normalisation","text":"function applies Variance Stabilizing Normalization (VSN) mass spectrometry data, options normalize based subsets data entire dataset.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/vsn_normalisation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"VSN Normalization — vsn_normalisation","text":"","code":"vsn_normalisation(   dat,   col.p,   row.p,   val,   calib = \"affine\",   normalize.bySubset = NULL,   normalize.bySubset.matchTerm = NULL,   normalize.bySubset.matchTerm.exactMatch = FALSE,   sp = \"_.._\" )"},{"path":"https://fredrious.github.io/MSqb2/reference/vsn_normalisation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"VSN Normalization — vsn_normalisation","text":"dat data.table containing data normalized. col.p Character vector. Column names used grouping data (e.g., sample condition). row.p Character vector. Row identifiers, typically feature protein IDs. val Character. column name representing intensity abundance values normalized. calib Character. Calibration method use, either \"affine\" (default) \"none\". \"none\", assumes data already normalized. normalize.bySubset Character NULL. Column name used define subset normalization. NULL, entire dataset normalized. normalize.bySubset.matchTerm Character NULL. term used match entries within subset defined normalize.bySubset. NULL, whole dataset used. normalize.bySubset.matchTerm.exactMatch Logical. TRUE, exact matches normalize.bySubset.matchTerm used subsetting. Default FALSE. sp Character. Separator used pasting together row identifiers converting data wide long formats. Default \"_.._\".","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/vsn_normalisation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"VSN Normalization — vsn_normalisation","text":"data.table normalized intensity values.","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/vsn_normalisation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"VSN Normalization — vsn_normalisation","text":"function uses vsn2 function vsn package perform normalization. normalization can applied entire dataset specific subset, can useful different subsets require separate normalization. Subset Normalization: normalize.bySubset specified, subset matching normalize.bySubset.matchTerm used normalization. Calibration: calib parameter allows affine calibration calibration (\"none\").","code":""},{"path":"https://fredrious.github.io/MSqb2/reference/vsn_normalisation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"VSN Normalization — vsn_normalisation","text":"","code":"if (FALSE) { # \\dontrun{   normalized_data <- vsn_normalisation(dat = my_data, col.p = \"SampleID\", row.p = \"ProteinID\", val = \"Intensity\") } # }"}]
