% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/protein_aggregation.R
\name{protein_aggregation}
\alias{protein_aggregation}
\title{Summarize Peptide- or Feature-Level Data to Protein-Level Data}
\usage{
protein_aggregation(
  dat,
  var = "Abundance",
  groupby = "Protein",
  summarization.method = "tmp",
  medianpolish.byPool = FALSE,
  block = "Pool",
  medianpolish.method = "column.eff",
  rm.total.missingness = TRUE,
  Tables.path = Tables.path
)
}
\arguments{
\item{dat}{A data.table containing the peptide-level data.}

\item{var}{A character string specifying the column name that holds the values to be summarized (e.g., "Abundance").}

\item{groupby}{A character string specifying the column name used to group the data by proteins (e.g., "Protein").}

\item{summarization.method}{A character string specifying the summarization method to use. Options are \code{"tmp"} (median polish), \code{"sum"}, \code{"median"} and \code{"mean"}.f}

\item{medianpolish.byPool}{A logical indicating whether to perform median polish by pool.}

\item{block}{A character string specifying the column name used to define blocks (e.g., "Pool").}

\item{medianpolish.method}{A character string specifying the method for median polish summarization. Options are "column.eff" (default) or "residual".}

\item{rm.total.missingness}{A logical indicating whether to remove proteins with complete missingness across samples. Default is TRUE.}

\item{Tables.path}{A character string specifying the directory where the output Excel file with protein abundance data will be saved.}
}
\value{
A data.table containing the summarized protein-level data with additional columns for peptide and PSM counts.
}
\description{
This function aggregates peptide-level or Feature-Level data to protein-level data using various summarization methods.
}
\examples{
\dontrun{
# Example usage of the protein_aggregation function
protein_data <- protein_aggregation(
  dat = peptide_data,
  var = "Abundance",
  groupby = "Protein",
  medianpolish.byPool = FALSE,
  block = "Pool",
  summarization.method = "tmp",
  medianpolish.method = "column.eff",
  rm.total.missingness = TRUE,
  Tables.path = "path/to/save/tables"
)
}
}
